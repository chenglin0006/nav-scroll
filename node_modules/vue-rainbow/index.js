require('es6-promise').polyfill();
import fetch from 'isomorphic-fetch';
import fetchJsonp from 'fetch-jsonp';
import getUA from '@dp/util-m-ua';
import KNB from "@dp/knb";
import Geo from "@dp/geo";
import cookie from 'cookie-dough';
import qs from 'qs';
import '@dp/hippo';
import {
  DrawStatus,
  DrawStatusSuccess,
  DrawEventSuccess,
  DrawEventSuccessType,
  NewUserParam,
  OrderType,
  DiscountType,
  PageViewStatus,
  ShopStatus
} from 'rainbow-enums';

import urlRewrite from '@dp/url-rewrite';

const ERROR_MES = "未知错误";
const ERROR_TYPE_MSG = "未知类型";
const MEITUAN = 2;
const DIANPING = 1;

const DrawStatusCode = {
  "000000": DrawStatus.SUCCESS,
  "110001": DrawStatus.USER_NOT_LOGIN,
  "110002": DrawStatus.USER_STAUS_ABNORMAL,
  "110003": DrawStatus.UNMATCHED_USER,
  "110004": DrawStatus.USER_NOT_EXIST,
  "300001": DrawStatus.INPUT_INVALID_ERROR,
  "300002": DrawStatus.ACTIVITY_NOT_EXIST,
  "300003": DrawStatus.ACTIVITY_NOT_RUNNING,
  "300005": DrawStatus.YOU_HAVE_WIN_ALL_PRIZE,
  "300006": DrawStatus.ACTIVITY_HAS_STOP,
  "300007": DrawStatus.ACTIVITY_HAS_SUSPEND,
  "300008": DrawStatus.HIT_NOTHING,
  "300009": DrawStatus.NOT_ENOUGH_DRAW_COUNT,
  "300010": DrawStatus.NO_PERMISSION,
  "300011": DrawStatus.HIT_PRIZE_AND_DRAW_COUNT_PASS_MAX,
  "300012": DrawStatus.AVAILABLE_PRIZE_STOCK_EMPTY,
  "300013": DrawStatus.NOT_ENOUGH_PRIZE,
  "300014": DrawStatus.ACTIVITY_QUOTA_EMPTY,
  "300015": DrawStatus.SHARE_FOR_ONE_MORE,
  "300020": DrawStatus.NO_PRIZELISE,
  "300016": DrawStatus.NOT_ENOUGH_DAY_DRAW_COUNT,
  "301001": DrawStatus.NOT_OBJECTPRIZE,
  "302001": DrawStatus.LIMIT_KEY_NOT_FOUND,
  "300020": DrawStatus.LIMIT_BY_RATE
}

const ShopStatusCode = {
  "000000": ShopStatus.SUCCESS,
  "120001": ShopStatus.ERROR_TOPICID
}

const DrawStatusSuccessCode = {
  4: DrawStatusSuccess.DRAW_NORMAL,
  2: DrawStatusSuccess.DRAW_SHARE_ENABLE,
  0: DrawStatusSuccess.DRAW_TOMORROW,
  1: DrawStatusSuccess.DRAW_LIMITED
}

const DrawEventSuccessCode = {
  1: DrawEventSuccess.DUPLICATED,
  0: DrawEventSuccess.NOT_DUPLICATED
}

const DrawEventSuccessTypeCode = {
  0: DrawEventSuccessType.THANKS,
  1: DrawEventSuccessType.COMBINATION,
  2: DrawEventSuccessType.SINGLETON,
  3: DrawEventSuccessType.COOPERATION,
  4: DrawEventSuccessType.MATERIAL_WITH_ADDRESS,
  5: DrawEventSuccessType.MERCHANT,
  6: DrawEventSuccessType.MATERIAL_WITHOUT_ADDRESS
}

const NewUserParamCode = {
  [NewUserParam.LIREN]: 50,
  [NewUserParam.YULE]: 30,
  [NewUserParam.EDU]: 75,
  [NewUserParam.QINZI]: 100,
  [NewUserParam.KTV]: 15
}

const PageViewStatusCode = {
  "000000": PageViewStatus.SUCCESS,
  "100001": PageViewStatus.ILLEGAL_REQUEST_PARAM,
  "999999": PageViewStatus.UNKNOWN
}

const EXPOSE_KEY = "data-exposed";

const COMPONENT_NAME = COMPONENT_NAME || "";

let exposeAction = (DOM, cb, triggerOnce = true, threshold, exposeKey) => {
  threshold = threshold || 0;
  window.addEventListener('scroll', () => {
    if ((DOM.offsetTop - document.body.scrollTop <= window.innerHeight - threshold) && !DOM.getAttribute(exposeKey || EXPOSE_KEY) && DOM.offsetHeight > 0) {
      cb && cb();
      triggerOnce && DOM.setAttribute(exposeKey || EXPOSE_KEY, true);
    }
  });
  setTimeout(() => {
    if ((DOM.offsetTop - document.body.scrollTop <= window.innerHeight - threshold) && !DOM.getAttribute(exposeKey || EXPOSE_KEY) && DOM.offsetHeight > 0) {
      cb && cb();
      triggerOnce && DOM.setAttribute(exposeKey || EXPOSE_KEY, true);
    }
  }, 500);
}

var vueRainbow = {};
vueRainbow.config = {};
vueRainbow.install = function (Vue) {
  var mixin = {
    data() {
      //只有根节点
      if (this.$parent) {
        return {
          _hippoExtend: {},
          _comName: this.$options.name,
          _lat: 0,
          _lng: 0,
          _cityId: (this.determinePlatform() == MEITUAN) ? 10 : 1
        }
      }
      return {}
    },
    ready() {
      let self = this;
      //只有根节点才需要发出定位请求
      if (this.$parent) {
        exposeAction(this.$el, () => {
          this.track('view', null, this.$data._hippoExtend);
        });
        // this.$el.addEventListener('click',(e)=>{
        //   e.stopPropagation();
        //   if(this.$parent){
        //     this.track('click', null , this.$data._hippoExtend);
        //   }
        //   return false;
        // });
      } else {
        Geo((config) => {
          this.$data._lng = config.lng || null;
          this.$data._lat = config.lat || null;
          this.$data._cityId = (config.cityId == '') ? ((this.determinePlatform() == MEITUAN) ? 10 : 1) : config.cityId;
        }, getUA().source);
        if (this.$root.config && this.$root.config.topicId) {

          this.reportPageView(this.$root.config.topicId, this.determinePlatform());

        }
      }
    },
    methods: {
      determinePlatform(platform) {
        if (!platform) {
          switch (getUA().source) {
            case 'meituan':
              platform = MEITUAN;
              break;
            default:
              platform = DIANPING;
              break;
          }
        }
        return platform;
      },
      track(action, type, extend) {
        let target = (typeof (extend) == 'object') ? extend : {};
        if (getUA().type == "mtgroup" || getUA().type == "dpapp") {
          KNB.ready(() => {
            KNB.getUserInfo({
              success: (user) => {
                try {
                  //hippo 会追加cityId  这里就又去掉了cityId
                  let mvObj = Object.assign(target, {
                    "module": this.$data._comName || "",
                    abtest: window.__RANDOM__STATUS || "",
                    "action": action,
                    "cartid": user.userId,
                    "type": type,
                    "topicid": this.$root && this.$root.config.topicId || "",
                    "note": this.$root && this.$root.config.bu || ""
                  });
                  _hip.push(['mv', mvObj]);
                } catch (e) {
                  console.error(e);
                }
              }
            });
          });
        } else {
          try {
            //hippo 会追加cityId  这里就又去掉了cityId
            let mvObj = Object.assign(target, {
              "module": this.$data._comName || "",
              abtest: window.__RANDOM__STATUS || "",
              "action": action,
              "cartid": "",
              "type": type,
              "topicid": this.$root && this.$root.config.topicId || "",
              "note": this.$root && this.$root.config.bu || ""
            });
            _hip.push(['mv', mvObj]);
          } catch (e) {
            console.error(e);
          }
        }
      },

      /**
       * reportPageView - 按页面上报用户信息
       *
       * @param  {String} topicId  页面id
       * @param  {Number} platform 平台
       * @param  {String} userId   用户id
       * @param  {String} uuid     设备id
       * @return {Object}          Promise
       */
      reportPageView(topicId, platform, userId, uuid) {
        let param = {
          topicId: topicId,
          platform: this.determinePlatform(platform),
          uuid: uuid,
          userId: userId
        }
        let reportUrl = this.determinePlatform(platform) == MEITUAN ? "//promo.dianping.com/mtlist/data/reportPageView.jsonp" : "//promo.dianping.com/list/data/reportPageView.jsonp";
        return fetchJsonp(urlRewrite(reportUrl + "?" + qs.stringify(param))).then((response) => {
          try {
            return response.json()
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        }).then((json) => {
          switch (json.code) {
            case "200":
              return json.data;
            default:
              throw new Error(ERROR_MES);
          }
        }).then((data) => {
          if (PageViewStatusCode[data.result] == undefined) {
            throw new Error(ERROR_TYPE_MSG);
          }
          return {
            status: PageViewStatusCode[data.result],
            message: data.resultString
          }
        });
      },
      /**
       * drawCheck - 抽奖之前检查用户状态
       *
       * @param  {Number} eid      活动id
       * @param  {Number} platform 平台
       * @param  {String} token    token
       * @return {Object}          返回Promise
       */
      drawCheck(eid, platform, token) {
        let params = {
          eid: eid,
          platform: this.determinePlatform(platform),
          token: token
        };

        return fetchJsonp(urlRewrite("//promo.dianping.com/services/drawStatus.jsonp?" + qs.stringify(params))).then((response) => {
          try {
            return response.json()
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        }).then((json) => {
          switch (json.code) {
            case "200":
              return json.data;
            default:
              throw new Error(ERROR_MES);
          }
        }).then((data) => {
          if (DrawStatusCode[data.result] == DrawStatus.SUCCESS) {
            let successVal = data.continueDraw << 2 | (data.share && !data.continueDraw) << 1 | (data.maxDrawCounts && !data.share) << 0;
            if (DrawStatusSuccessCode[successVal] == undefined || DrawStatusCode[data.result] == undefined) {
              throw new Error(ERROR_TYPE_MSG);
            }
            return {
              status: DrawStatusCode[data.result],
              message: data.resultString,
              successStatus: DrawStatusSuccessCode[successVal]
            }
          } else {
            if (DrawStatusCode[data.result] == undefined) {
              throw new Error(ERROR_TYPE_MSG);
            }
            return {
              status: DrawStatusCode[data.result],
              message: data.resultString
            }
          }

        });
      },
      getDeal(config, platform) {
        /**
         * 兼容,不传platform时候自动根据环境判断
         * @type {[type]}
         */
        platform = platform || getUA().source == "meituan" ? MEITUAN : DIANPING;
        /**
         * 美团处理
         */
        if (platform == MEITUAN) {
          return fetchJsonp(urlRewrite("//promo.dianping.com/mtlist/getDealInfo.jsonp?" + qs.stringify(config))).then((response) => {
            try {
              return response.json();
            } catch (e) {
              throw new Error(ERROR_MES);
            }
          });
        } else {
          return fetchJsonp(urlRewrite("//promo.dianping.com/list/getDealInfo.jsonp?" + qs.stringify(config))).then((response) => {
            try {
              return response.json();
            } catch (e) {
              throw new Error(ERROR_MES);
            }
          });
        }
      },
      getShop(config, platform) {
        /**
         * 兼容,不传platform时候自动根据环境判断
         * @type {[type]}
         */
        platform = platform || getUA().source == "meituan" ? MEITUAN : DIANPING;
        /**
         * 美团处理
         */
        if (platform == MEITUAN) {
          return fetchJsonp(urlRewrite("//promo.dianping.com/mtlist/getShops.jsonp?" + qs.stringify(config))).then((response) => {
            try {
              return response.json();
            } catch (e) {
              throw new Error(ERROR_MES);
            }
          }).then((json) => {
            switch (json.code) {
              case "200":
                return json.data;
              default:
                throw new Error(ERROR_MES);
            }
          }).then((data) => {
            if (ShopStatusCode[data.result] == ShopStatus.SUCCESS) {
              return {
                data: data.shopRecords,
                status: ShopStatusCode[data.result],
                message: data.resultString
              }
            } else if (ShopStatusCode[data.result] == ShopStatus.ERROR_TOPICID) {
              return {
                status: ShopStatus[data.result],
                message: data.resultString,
                data: []
              }
            } else {
              throw new Error(ERROR_TYPE_MSG);
            }
          });
        } else {
          return fetchJsonp(urlRewrite("//promo.dianping.com/list/getShops.jsonp?" + qs.stringify(config))).then((response) => {
            try {
              return response.json();
            } catch (e) {
              throw new Error(ERROR_MES);
            }
          }).then((json) => {
            return {
              data: json.productList || [],
              status: 200
            }
          });
        }
      },
      draw(eid, platform, dpid, cx, token, score) {

        return new Promise((resolve, reject) => {
          let params = {
            eid: eid,
            platform: this.determinePlatform(platform),
            token: token,
            cityId: this.$data._cityId,
            score: score
          };
          if (getUA().type == "mtgroup" || getUA().type == "dpapp") {
            KNB.ready(() => {
              Promise.all([
                KNB.getPromiseInstance().getUserInfo(),
                KNB.getPromiseInstance().getFingerprint()
              ]).then((data) => {
                let fp = cx ? cx : data[1].fingerprint; //风控信息
                let device = dpid ? dpid : data[0].uuid; //设备信息  
                resolve(Object.assign(params, { cx: fp, dpid: device }))
              }, () => {
                resolve(params)
              }).catch(() => {
                resolve(params)
              })
            })
          } else {
            resolve(params)
          }
        }).then((params) => {
          return fetchJsonp(urlRewrite("//promo.dianping.com/services/drawEvent.jsonp?" + qs.stringify(params))).then((response) => {
            try {
              return response.json();
            } catch (e) {
              throw new Error(ERROR_MES);
            }
          }).then((json) => {
            switch (json.code) {
              case "200":
                return json.data;
              default:
                throw new Error(ERROR_MES);
            }
          }).then((data) => {
            if (DrawStatusCode[data.result] == DrawStatus.SUCCESS) {

              if (DrawEventSuccessCode[data.isre] == undefined || DrawEventSuccessTypeCode[data.type] == undefined) {
                throw new Error(ERROR_TYPE_MSG);
              }

              return Object.assign({
                status: DrawStatusCode[data.result],
                successStatus: DrawEventSuccessCode[data.isre],
                successTypeStatus: DrawEventSuccessType[data.type],
                message: data.resultString
              }, {
                  data: data
                });
            } else {
              if (DrawStatusCode[data.result] == undefined) {
                throw new Error(ERROR_TYPE_MSG);
              }
              return {
                status: DrawStatusCode[data.result],
                message: data.resultString
              }
            }

          });
        });



      },
      shareSuccess(eid, platform, dpid, securitycode, token) {
        let params = {
          eid: eid,
          platform: this.determinePlatform(platform),
          securitycode: securitycode || '',
          token: token || '',
          dpid: dpid || '',
          source: getUA().type
        };
        return fetchJsonp(urlRewrite("//promo.dianping.com/services/shareEvent.jsonp?" + qs.stringify(params))).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        }).then((json) => {
          switch (json.code) {
            case "200":
              return json.data;
            default:
              throw new Error(ERROR_MES);
          }
        }).then((data) => {
          if (DrawStatusCode[data.result] == undefined) {
            throw new Error(ERROR_TYPE_MSG);
          }
          return {
            status: DrawStatusCode[data.result],
            message: data.resultString
          }
        });
      },
      userNewStatus(newUserParam, token) {
        let params = {
          bu: NewUserParamCode[newUserParam],
          token: token || ""
        }

        return fetchJsonp(urlRewrite("//promo.dianping.com/services/userNewStatus.jsonp?" + qs.stringify(params))).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        }).then((json) => {
          switch (json.code) {
            case "200":
              return json.data;
            default:
              throw new Error(ERROR_MES);
          }
        }).then((data) => {
          if (DrawStatusCode[data.result] == undefined) {
            throw new Error(ERROR_TYPE_MSG);
          }
          return {
            status: DrawStatusCode[data.result],
            message: data.resultString,
            isNewUser: data.new
          }
        });
      },

      /**
       * getRecommendDeal - 猜你喜欢团单
       *
       * @param  {Integer} cityId         城市id
       * @param  {String} categoryIdsStr 团购类目，可多选，形如101,102,103
       * @param  {Integer} pageSize       页大小
       * @param  {Integer} pageNum        页号
       * @param  {Number} longitude      经度
       * @param  {Number} latitude       纬度
       * @param  {Integer} platform       平台，如不传会自己判断
       * @param  {String} dpid           dpid
       * @param  {String} token          token
       * @return {Object}                Promise
       */
      getRecommendDeal(cityId, categoryIdsStr, pageSize, pageNum, longitude, latitude, platform, dpid, token) {
        let params = {
          geoCityId: cityId,
          cityId: cityId,
          categoryIdsStr: categoryIdsStr || "",
          pageSize: pageSize,
          pageNum: pageNum,
          longitude: longitude,
          latitude: latitude,
          dpid: dpid,
          token: token
        }
        let requestUrl = this.determinePlatform(platform) == MEITUAN ? "//i.meituan.com/mtlist/rec/getMtDealList.jsonp" : "//promo.dianping.com/list/rec/getDealList.jsonp";
        return fetchJsonp(urlRewrite(requestUrl + "?" + qs.stringify(params))).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        }).then((json) => {
          switch (json.code) {
            case "200":
              return json.data;
            default:
              throw new Error(ERROR_MES);
          }
        }).then((data) => {
          return {
            data: data.records || [],
            status: 200
          }
        });

      },
      /**
       * getRecord - 内容运营列表
       */
      getRecord(config, platform) {
        /**
         * 兼容,不传platform时候自动根据环境判断
         */
        config.platform = platform || getUA().source == "meituan" ? MEITUAN : DIANPING;
        let url = "";
        if (getUA().source == "meituan") {
          config.platform = MEITUAN;
          url = "//i.meituan.com/mtlist/getRecord.jsonp?";
        } else {
          config.platform = DIANPING;
          url = "//promo.dianping.com/list/getRecord.jsonp?";
        }
        return fetchJsonp(urlRewrite(url + qs.stringify(config))).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        });
      },
      /**
       * 获取摄影预约 某月的预约信息
       */
      getBookingScheduleInfo(config) {
        let url = "";
        if (getUA().source == "meituan") {
          if (location.href.indexOf('test') > -1) {
            url = "//test.i.meituan.com/baby/mobile/bookingschedule/mt/ajax/getbookingscheduleinfo?";
          } else {
            url = "//i.meituan.com/baby/mobile/bookingschedule/mt/ajax/getbookingscheduleinfo?";
          }
        } else {
          if (location.href.indexOf('dianping') > -1) {
            url = "//m.dianping.com/baby/mobile/bookingschedule/ajax/getbookingscheduleinfo?";
          } else {
            url = "//m.51ping.com/baby/mobile/bookingschedule/ajax/getbookingscheduleinfo?";
          }
        }
        return fetchJsonp(url + qs.stringify(config)).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        });
      },
      /**
       * 获取摄影预约 某天的预约信息
       */
      getBookingScheduleDetailInfo(config) {
        let url = "";
        if (getUA().source == "meituan") {
          if (location.href.indexOf('test') > -1) {
            url = "//test.i.meituan.com/baby/mobile/bookingschedule/mt/ajax/getbookingscheduledetailinfo?";
          } else {
            url = "//i.meituan.com/baby/mobile/bookingschedule/mt/ajax/getbookingscheduledetailinfo?";
          }
        } else {
          if (location.href.indexOf('dianping') > -1) {
            url = "//m.dianping.com/baby/mobile/bookingschedule/ajax/getbookingscheduledetailinfo?";
          } else {
            url = "//m.51ping.com/baby/mobile/bookingschedule/ajax/getbookingscheduledetailinfo?";
          }
        }
        return fetchJsonp(url + qs.stringify(config)).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        });
      },
      /**
       * 获取摄影预约 商户预约礼
       */
      getBookingGift(config) {
        let url = "";
        if (getUA().source == "meituan") {
          if (location.href.indexOf('test') > -1) {
            url = "//test.i.meituan.com/baby/mobile/bookingSchedule/mt/ajax/getbookinggift?";
          } else {
            url = "//i.meituan.com/baby/mobile/bookingSchedule/mt/ajax/getbookinggift?";
          }
        } else {
          if (location.href.indexOf('dianping') > -1) {
            url = "//m.dianping.com/baby/mobile/bookingSchedule/ajax/getbookinggift?";
          } else {
            url = "//m.51ping.com/baby/mobile/bookingSchedule/ajax/getbookinggift?";
          }
        }
        return fetchJsonp(url + qs.stringify(config)).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        });
      },
      /**
       * 摄影预约
       */
      bookingPhotoGraphy(config) {
        let url = "";
        KNB.getUserInfo({
          success: (user) => {
            config.uuid = user.uuid || '';
          }
        });
        if (getUA().source == "meituan") {
          if (location.href.indexOf('test') > -1) {
            url = "//test.i.meituan.com/baby/mobile/bookingschedule/mt/ajax/createorder?";
          } else {
            url = "//i.meituan.com/baby/mobile/bookingschedule/mt/ajax/createorder?";
          }
        } else {
          if (location.href.indexOf('dianping') > -1) {
            url = "//m.dianping.com/baby/mobile/bookingschedule/ajax/createorder?";
          } else {
            url = "//m.51ping.com/baby/mobile/bookingschedule/ajax/createorder?";
          }
        }
        return fetchJsonp(url + qs.stringify(config)).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        });
      },
      /**
       * C端天天免费抽奖品列表
       * wiki:http://wiki.sankuai.com/pages/viewpage.action?pageId=595409140
       */
      getPrizes(config) {
        let url = "";
        if (getUA().source == "meituan") {
          config.platform = MEITUAN;
          url = "//i.meituan.com/mtlist/getPrizes.jsonp?";
        } else {
          config.platform = DIANPING;
          url = "//promo.dianping.com/list/getPrizes.jsonp?";
        }
        return fetchJsonp(urlRewrite(url + qs.stringify(config))).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        });
      },
      /**
       * C端抽奖报名服务
       * wiki:http://wiki.sankuai.com/pages/viewpage.action?pageId=444697403#id-综合营销抽奖活动类服务-抽奖接口
       */
      register(config) {
        let url = "";
        if (getUA().source == "meituan") {
          config.platform = MEITUAN;
          url = "//i.meituan.com/services/register.jsonp?";
        } else {
          config.platform = DIANPING;
          url = "//promo.dianping.com/services/register.jsonp?";
        }
        return fetchJsonp(urlRewrite(url + qs.stringify(config))).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        });
      },
      /**
       * C端用户抽奖报名查询服务
       * wiki:http://wiki.sankuai.com/pages/viewpage.action?pageId=444697403#id-综合营销抽奖活动类服务-抽奖接口
       */
      getUserRegisterList(config) {
        let url = "";
        if (getUA().source == "meituan") {
          config.platform = MEITUAN;
          url = "//i.meituan.com/services/getUserRegisterList.jsonp?";
        } else {
          config.platform = DIANPING;
          url = "//promo.dianping.com/services/getUserRegisterList.jsonp?";
        }
        return fetchJsonp(urlRewrite(url + qs.stringify(config))).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        });
      },
      /**
       * drawlist -跑马灯接口
       * wiki:http://wiki.sankuai.com/pages/viewpage.action?pageId=444697403
       */
      drawlist(config) {
        let url = "";
        if (getUA().source == "meituan") {
          config.platform = MEITUAN;
          url = "//i.meituan.com/services/drawlist.jsonp?";
        } else {
          config.platform = DIANPING;
          url = "//promo.dianping.com/services/drawlist.jsonp?";
        }
        return fetchJsonp(urlRewrite(url + qs.stringify(config))).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        });
      },
      /**
       * getrelation -获取关联用户的列表接口
       * wiki:http://wiki.sankuai.com/pages/viewpage.action?pageId=444697403#id-综合营销抽奖活动类服务-获取关联用户的列表接口
       */
      getrelation(config) {
        let url = "";
        if (getUA().source == "meituan") {
          config.platform = MEITUAN;
          url = "//i.meituan.com/services/getrelation.jsonp?";
        } else {
          config.platform = DIANPING;
          url = "//promo.dianping.com/services/getrelation.jsonp?";
        }
        return fetchJsonp(urlRewrite(url + qs.stringify(config))).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        });
      },
      /**
       * note -记录分享用户之间的关联状态
       * wiki:http://wiki.sankuai.com/pages/viewpage.action?pageId=444697403
       */
      note(config) {
        let url = "";
        if (getUA().source == "meituan") {
          config.platform = MEITUAN;
          url = "//i.meituan.com/services/note.jsonp?";
        } else {
          config.platform = DIANPING;
          url = "//promo.dianping.com/services/note.jsonp?";
        }
        return fetchJsonp(urlRewrite(url + qs.stringify(config))).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        });
      },
      /**
       * getMobileNo 获取手机号
       * wiki:http://wiki.sankuai.com/pages/viewpage.action?pageId=660245859
       */
      getMobileNo(config) {
        let url = "";
        if (getUA().source == "meituan") {
          if (location.href.indexOf('test') > -1) {
            url = "//m.51ping.com/baby/mobile/bookingschedule/mt/ajax/mobileno?";
          } else {
            url = "//m.dianping.com/baby/mobile/bookingschedule/mt/ajax/mobileno?";
          }
        } else {
          if (location.href.indexOf('dianping') > -1) {
            url = "//m.dianping.com/baby/mobile/bookingschedule/ajax/mobileno?";
          } else {
            url = "//m.51ping.com/baby/mobile/bookingschedule/ajax/mobileno?";
          }
        }
        return fetchJsonp(url + qs.stringify(config)).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        });
      },
      /**
       *  获取霸王餐活动列表
       * wiki:http://wiki.sankuai.com/pages/viewpage.action?pageId=685048277
       */
      getFreeDineList(config) {
        let url = "";
        if (getUA().source == "meituan") {
          config.platform = MEITUAN;
          if (location.href.indexOf('test') > -1) {
            url = "//test.i.meituan.com/mtlist/data/getBwcActivity.jsonp?";
          } else {
            url = "//i.meituan.com/mtlist/data/getBwcActivity.jsonp?";
          }
        } else {
          config.platform = DIANPING;
          if (location.href.indexOf('dianping') > -1) {
            url = "//promo.dianping.com/list/data/getBwcActivity.jsonp?";
          } else {
            url = "//promo.51ping.com/list/data/getBwcActivity.jsonp?";
          }
        }
        return fetchJsonp(url + qs.stringify(config)).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        });
      },
      /**
       *  购后抽奖
       * http://wiki.sankuai.com/pages/viewpage.action?pageId=688298475
       */
      postbuy(config) {
        let url = "";
        if (getUA().source == "meituan") {
          config.platform = MEITUAN;
          if (location.href.indexOf('test') > -1) {
            url = "//test.i.meituan.com/services/postbuy.jsonp?";
          } else {
            url = "//i.meituan.com/services/postbuy.jsonp?";
          }
        } else {
          config.platform = DIANPING;
          if (location.href.indexOf('dianping') > -1) {
            url = "//promo.dianping.com/services/postbuy.jsonp?";
          } else {
            url = "//promo.51ping.com/services/postbuy.jsonp?";
          }
        }
        return fetchJsonp(url + qs.stringify(config)).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        });
      },
      /**
       *  朋友们的手气
       * http://wiki.sankuai.com/pages/viewpage.action?pageId=688298475
       */
      getfriends(config) {
        let url = "";
        if (getUA().source == "meituan") {
          config.platform = MEITUAN;
          if (location.href.indexOf('test') > -1) {
            url = "//test.i.meituan.com/services/getfriends.jsonp?";
          } else {
            url = "//i.meituan.com/services/getfriends.jsonp?";
          }
        } else {
          config.platform = DIANPING;
          if (location.href.indexOf('dianping') > -1) {
            url = "//promo.dianping.com/services/getfriends.jsonp?";
          } else {
            url = "//promo.51ping.com/services/getfriends.jsonp?";
          }
        }
        return fetchJsonp(url + qs.stringify(config)).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        });
      },
      /**
       *  获取课程列表
       *  http://wiki.sankuai.com/pages/viewpage.action?pageId=691033542
       */
      getCourses(config) {
        let url = "";
        if (getUA().source == "meituan") {
          config.platform = MEITUAN;
          if (location.href.indexOf('test') > -1) {
            url = "//test.i.meituan.com/mtlist/getCourses.jsonp?";
          } else {
            url = "//i.meituan.com/mtlist/getCourses.jsonp?";
          }
        } else {
          config.platform = DIANPING;
          if (location.href.indexOf('dianping') > -1) {
            url = "//promo.dianping.com/list/getCourses.jsonp?";
          } else {
            url = "//promo.51ping.com/list/getCourses.jsonp?";
          }
        }
        return fetchJsonp(url + qs.stringify(config)).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        });
      },
      /**
       *  获取霸王餐列表
       *  http://wiki.sankuai.com/pages/viewpage.action?pageId=685048277
       */
      getBwcActivityNew(config) {
        let url = "";
        if (getUA().source == "meituan") {
          config.platform = MEITUAN;
          if (location.href.indexOf('test') > -1) {
            url = "//test.i.meituan.com/mtlist/data/getBwcActivityNew.jsonp?";
          } else {
            url = "//i.meituan.com/mtlist/data/getBwcActivityNew.jsonp?";
          }
        } else {
          config.platform = DIANPING;
          if (location.href.indexOf('dianping') > -1) {
            url = "//promo.dianping.com/list/data/getBwcActivityNew.jsonp?";
          } else {
            url = "//promo.51ping.com/list/data/getBwcActivityNew.jsonp?";
          }
        }
        return fetchJsonp(url + qs.stringify(config)).then((response) => {
          try {
            return response.json();
          } catch (e) {
            throw new Error(ERROR_MES);
          }
        });
      }
    },
    props: {
      skin: {
        type: Object,
        default() {
          return {
            'default': true
          };
        }
      },
      config: {
        type: Object,
        default() {
          return {};
        },
        coerce(v) {
          return typeof (v) == 'String' ? JSON.parse(v) : v;
        }
      }
    }
  }
  Vue.mixin(mixin);
}
module.exports = vueRainbow;