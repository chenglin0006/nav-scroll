import UA  from "@dp/util-m-ua"
let ua = UA();

/**
 * [KEY_ENUM description]
 * ajax访问地址映射,可扩展
 * @type {Array}
 */
let AJAX_ENUM = [
	//营销平台 
	{
		dp:"//promo.dianping.com",
		dptest:"//promo.51ping.com",
		mt:"//i.meituan.com/gmkt",
		mttest:"//test.i.meituan.com/gmkt"
	}
]


let Ur = module.exports  = function(url){
	return _webUr(url,AJAX_ENUM);
};


/**
 * [_webUr 转化web 路径]
 * @param  {[type]} url  [description]
 * @param  {[type]} enum [description]
 * @return {[type]}      [description]
 */
function _webUr(url,enum_arrs){
	let result;

	enum_arrs.some((it)=>{
		for(let key in it){
			let value = it[key];
			if(~url.indexOf(value)){
				let path = url.replace(new RegExp(`[^\/]*?${value}`),"");

				let prefix =  ua.source == "meituan" ? (
						~location.host.indexOf("test") ? it["mttest"] : it["mt"]
					)
					:
					(
						ua.source == "dianping" ?  (
							~location.host.indexOf("51ping") ? it["dptest"] : it["dp"]
						)
						:
						false
					);
				if(prefix){
					result = prefix + path;
					return true;
				}
			}
		}
		return false;
	});

	if(!result)
		console.log(`${url}不存在隐射域名中`)

	return result || url;
}

/**
 * [返回app跳转链接]
 * @param  {[type]} obj [description]
 * @return {[type]}     [description]
 */
function _appUr(obj){
	return ua.type == "dpapp" ? obj["dpapp"]
			: ua.type == "mtgroup" ? obj["dpapp"] : false
}

/**
 * [SKIP_ENUM 跳转链接隐射]
 * 扩展
 * @type {Object}
 */
let SKIP_ENUM = {
	deal:{
		dp:"//m.dianping.com/tuan/deal/{id}",
		dptest:"//m.51ping.com/tuan/deal/{id}",
		mt:"http://i.meituan.com/deal/${id}.html",
		mttest:"http://test.i.meituan.com/deal/{id}.html",
		dpapp:"dianping://tuandeal?id={id}",
		mtgroup:"imeituan://www.meituan.com/deal?did={id}"
	},
	shop:{
		dp:"//m.dianping.com/shop/{id}",
		dptest:"//m.51ping.com/shop/{id}",
		mt:"http://i.meituan.com/poi/{id}",
		mttest:"http://test.i.meituan.com/poi/{id}",
		dpapp:"dianping://shopinfo?shopid={id}&id={id}",
		mtgroup:"imeituan://www.meituan.com/merchant?id={id}"
	}
}
/**
 * 扩展跳转暴漏接口
 * @param  {[type]} it){	Ur} [description]
 * @return {[type]}            [description]
 */
for(let key in SKIP_ENUM){
	let value = SKIP_ENUM[key];

	Ur[key] = function(opt){
		/**
		 * 看是否在app内
		 * 看web转换,试以dp参数传入
		 * @type {[type]}
		 */
		let matchStr = _appUr(value) || _webUr(value["dp"],[value]) || false;

		for(let k in opt){
			let v = opt[k];
			matchStr = matchStr.replace(new RegExp(`\{${k}\}`,"g") ,v);		
		}

		return  matchStr;
	}
}
