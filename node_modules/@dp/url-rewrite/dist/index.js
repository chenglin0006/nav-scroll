"use strict";

var _utilMUa = require("@dp/util-m-ua");

var _utilMUa2 = _interopRequireDefault(_utilMUa);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ua = (0, _utilMUa2.default)();

var AJAX_ENUM = [{
	dp: "//promo.dianping.com",
	dptest: "//promo.51ping.com",
	mt: "//i.meituan.com",
	mttest: "//test.i.meituan.com"
}];

var Ur = module.exports = function (url) {
	return _webUr(url, AJAX_ENUM);
};

function _webUr(url, enum_arrs) {
	var result = void 0;

	enum_arrs.some(function (it) {
		for (var key in it) {
			var value = it[key];
			if (~url.indexOf(value)) {
				var path = url.replace(new RegExp("[^/]*?" + value), "");

				var prefix = ua.source == "meituan" ? ~location.host.indexOf("test") ? it["mttest"] : it["mt"] : ua.source == "dianping" ? ~location.host.indexOf("51ping") ? it["dptest"] : it["dp"] : it["dptest"];
				if (prefix) {
					result = prefix + path;
					return true;
				}
			}
		}
		return false;
	});

	if (!result) console.log(url + "不存在隐射域名中");

	return result || url;
}

function _appUr(obj) {
	return ua.type == "dpapp" ? obj["dpapp"] : ua.type == "mtgroup" ? obj["dpapp"] : false;
}

var SKIP_ENUM = {
	deal: {
		dp: "//m.dianping.com/tuan/deal/{id}",
		dptest: "//m.51ping.com/tuan/deal/{id}",
		mt: "//i.meituan.com/deal/${id}.html",
		mttest: "//test.i.meituan.com/deal/{id}.html",
		dpapp: "dianping://tuandeal?id={id}",
		mtgroup: "imeituan://www.meituan.com/deal?did={id}"
	},
	shop: {
		dp: "//m.dianping.com/shop/{id}",
		dptest: "//m.51ping.com/shop/{id}",
		mt: "//i.meituan.com/poi/{id}",
		mttest: "//test.i.meituan.com/poi/{id}",
		dpapp: "dianping://shopinfo?shopid={id}&id={id}",
		mtgroup: "imeituan://www.meituan.com/merchant?id={id}"
	}
};

var _loop = function _loop(key) {
	var value = SKIP_ENUM[key];

	Ur[key] = function (opt) {
		var matchStr = _appUr(value) || _webUr(value["dp"], [value]) || false;

		for (var k in opt) {
			var v = opt[k];
			matchStr = matchStr.replace(new RegExp("{" + k + "}", "g"), v);
		}

		return matchStr;
	};
};

for (var key in SKIP_ENUM) {
	_loop(key);
}