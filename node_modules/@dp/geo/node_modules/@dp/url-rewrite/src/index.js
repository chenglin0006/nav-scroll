import UA from "@dp/util-m-ua";
import UTM from "./utm";
import URL from "@dp/base-op-url";
let ua = UA();
//utm_souce附加条件
let locObj = new URL(location.href);
let extraUa = UTM[locObj.search('utm_source')];
let mtLch = locObj.search('lch');
let ossWhiteList = [1200916, 1200917]; //陶柳提的微信唤起白名单，在白名单内的活动就算没有传wxpush都可以唤起app
/**
 * [KEY_ENUM description]
 * ajax访问地址映射,可扩展
 * @type {Array}
 */
let AJAX_ENUM = [
	//营销平台 
	{
		dp: "//promo.dianping.com/list",
		dptest: "//promo.51ping.com/list"
	}, {
		dp: "//promo.dianping.com/mtlist",
		dptest: "//promo.51ping.com/mtlist",
		mt: "//i.meituan.com/mtlist",
		mttest: "//test.i.meituan.com/mtlist"
	}, {
		dp: "//promo.dianping.com/services",
		dptest: "//promo.51ping.com/services",
		mt: "//i.meituan.com/services",
		mttest: "//test.i.meituan.com/services"
	}
]


let Ur = module.exports = function (url) {
	return _webUr(url, AJAX_ENUM);
};


function regFormat(url) {
	return url.replace("?", "\\?");
}

/**
 * [_webUr 转化web 路径]
 * @param  {[type]} url  [description]
 * @param  {[type]} enum [description]
 * @return {[type]}      [description]
 */
function _webUr(url, enum_arrs) {
	let result;

	enum_arrs.some((it) => {
		for (let key in it) {
			let value = it[key];
			if (~url.indexOf(value)) {
				let path = url.replace(new RegExp(`[^\/]*?${regFormat(value)}`), "");

				let prefix = ua.source == "meituan" ? (~location.host.indexOf("test") ? it["mttest"] : it["mt"]) :
					(
						ua.source == "dianping" ? (~location.host.indexOf("51ping") ? it["dptest"] : it["dp"]) :
							it["dptest"]
					);


				if (prefix) {
					result = prefix + path;
					return true;
				}
			}
		}
		return false;
	});

	if (!result)
		console.log(`${url}不存在隐射域名中`)
	return result || url;
}
/**
 * [返回综合链接跳转]
 * @param  {[type]} obj [description]
 * @return {[type]}     [description]
 */
function _ossUr(obj) {
	//恶心的白名单操作
	let wxpush = false;
	ossWhiteList.forEach((it) => {
		let exp = new RegExp("\/" + it + "\/");
		if (exp.test(location.href)) {
			wxpush = true;
		}
	});
	if (extraUa == "oss") {
		wxpush = true;
	}

	if (wxpush) {
		switch (ua.source) {
			case "meituan":
				return obj["mtoss"];
			case "dianping":
				return obj['dposs'];
			default:
				return obj["dposs"];
		}
	} else {
		return false

	}
}

/**
 * [返回app跳转链接]
 * @param  {[type]} obj [description]
 * @return {[type]}     [description]
 */
function _appUr(obj) {
	return ua.type == "dpapp" ? obj["dpapp"] :
		ua.type == "mtgroup" ? obj["mtgroup"] : false
}

/**
 * [SKIP_ENUM 跳转链接隐射]
 * 扩展
 * @type {Object}
 */
let SKIP_ENUM = {
	deal: {
		dp: "//m.dianping.com/tuan/deal/{id}",
		dptest: "//m.51ping.com/tuan/deal/{id}",
		mt: "//i.meituan.com/deal/{id}.html",
		mttest: "//test.i.meituan.com/deal/{id}.html",
		dpapp: "dianping://tuandeal?id={id}",
		mtgroup: parseInt((ua.version || "").replace(/\./g, "")) >= 730 ? "imeituan://www.meituan.com/gc/deal/detail?did={id}&channel={channel}" : "imeituan://www.meituan.com/deal?did={id}&channel={channel}",
		//新增综合链接处理, 美团跳转到app的目标url，点评在app中打开当前活动页面
		mtoss: parseInt((ua.version || "").replace(/\./g, "")) >= 730 ?
			"//tpl.dianping.com/firework/callApp?type=meituan&appurl=imeituan%3A%2F%2Fwww.meituan.com%2Fgc%2Fdeal%2Fdetail%3Flch%3D" + mtLch + "%26did%3D{id}%26channel%3D{channel}&weburl=%2F%2Fi.meituan.com%2Fdeal%2F{id}.html" : "//tpl.dianping.com/firework/callApp?type=meituan&appurl=imeituan%3A%2F%2Fwww.meituan.com%2Fdeal%3Flch%3D" + mtLch + "%26did%3D{id}%26channel%3D{channel}&weburl=%2F%2Fi.meituan.com%2Fdeal%2F{id}.html",
		dposs: "//evt.dianping.com/synthesislink/10062.html?dealId={id}"
	},
	shop: {
		dp: "//m.dianping.com/shop/{id}",
		dptest: "//m.51ping.com/shop/{id}",
		mt: "//i.meituan.com/poi/{id}",
		mttest: "//test.i.meituan.com/poi/{id}",
		dpapp: "dianping://shopinfo?shopid={id}&id={id}",
		mtgroup: "imeituan://www.meituan.com/merchant?id={id}&showtype={showtype}",
		//新增综合链接处理, 美团跳转到app的目标url，点评在app中打开当前活动页面
		mtoss: "//tpl.dianping.com/firework/callApp?type=meituan&appurl=imeituan%3A%2F%2Fwww.meituan.com%2Fmerchant%3Flch%3D" + mtLch + "%26id%3D{id}%26showtype%3D{showtype}&weburl=%2F%2Fi.meituan.com%2Fpoi%2F{id}",
		dposs: "//evt.dianping.com/synthesislink/10064.html?shopId={id}"
	},
	web: {
		dp: "{url}",
		dptest: "{url}",
		mt: "{url}",
		mttest: "{url}",
		dpapp: "{url}",
		mtgroup: "{url}",
		//美团跳转到app的目标url，点评在app中打开当前活动页面
		mtoss: "//tpl.dianping.com/firework/callApp?type=meituan&appurl=imeituan%3A%2F%2Fwww.meituan.com%2Fweb%3Flch%3D" + mtLch + "%26url%3D{{url}}&weburl={{url}}",
		dposs: "//evt.dianping.com/synthesislink/10401.html?url={{url}}"
	},
	schema: {
		dp: "//evt.dianping.com/synthesislink/10131.html?url={{url}}&local=" + encodeURIComponent(location.href),
		dptest: "//evt.dianping.com/synthesislink/10131.html?url={{url}}&local=" + encodeURIComponent(location.href),
		mt: "//tpl.dianping.com/firework/callApp?type=meituan&appurl={{url}}&weburl=" + encodeURIComponent(location.href),
		mttest: "//tpl.dianping.com/firework/callApp?type=meituan&appurl={{url}}&weburl=" + encodeURIComponent(location.href),
		dpapp: "{url}",
		mtgroup: "{url}",
		//美团跳转到app的目标url，点评在app中打开当前活动页面
		mtoss: "//tpl.dianping.com/firework/callApp?type=meituan&appurl={{url}}&weburl=" + encodeURIComponent(location.href),
		dposs: "//evt.dianping.com/synthesislink/10447.html?url={{url}}"
	},
	// 先支持点评侧
	search: {
		dp: "//m.dianping.com/shoplist/1/r/0/c/30/s/s_-1?keyword={{keyword}}",
		dptest: "//m.51ping.com/shoplist/1/r/0/c/30/s/s_-1?keyword={{keyword}}",
		dpapp: "dianping://searchshoplist?sort=0&categoryid=30&keyword={{keyword}}"
	}
}


/**
 * 扩展方法handler
 */
function _handler(value) {
	return function (opt) {
		/**
		 * 看是否在app内，或者是综合链接
		 * 看web转换,试以dp参数传入
		 * @type {[type]}
		 */
		let matchStr = _appUr(value) || _ossUr(value) || _webUr(value["dp"], [value]) || false;

		for (let k in opt) {
			let v = opt[k];
			matchStr = matchStr.replace(new RegExp(`\{\{${k}\}\}`, "g"), encodeURIComponent(v)).replace(new RegExp(`\{${k}\}`, "g"), v);
		}
		return matchStr.replace(/\&?\{[^\}]+\}/g, "");;
	}
}

/**
 * 扩展跳转暴漏接口
 * @param  {[type]} it){	Ur} [description]
 * @return {[type]}            [description]
 */
for (let key in SKIP_ENUM) {
	let value = SKIP_ENUM[key];
	Ur[key] = _handler(value);
}


/**
 * 方法外露扩展
 * @param  {[type]} key   [方法名]
 * @param  {[type]} value [各环境下匹配值]
 */
Ur.methodExtend = function (key, value) {
	if (!Ur[key]) {
		Ur[key] = _handler(value);
	} else {
		console.log(`${key}方法已存在`);
	}
}

/**
 * ajax接口扩展
 * 
 */
Ur.AjaxExtend = function (value) {
	AJAX_ENUM.push(value);
}


/*
	处理路径点
 */
function normalize_array(parts) {
	var up = 0;
	var i = parts.length - 1;
	for (; i >= 0; i--) {
		var last = parts[i];
		if (last === '.') {
			parts.splice(i, 1);

		} else if (last === '..') {
			parts.splice(i, 1);
			up++;

		} else if (up) {
			parts.splice(i, 1);
			up--;
		}
	}

	while (up--) {
		parts.unshift('..');
	}

	return parts;
}

/*
	node.resolve 实现
 */
Ur.resolve = function (from, to) {
	var parts = (from + '/' + to)
		.split('/')
		.filter(Boolean);
	return normalize_array(parts).join('/');
}