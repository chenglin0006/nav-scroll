var config = require("./lib/config");
var cache = require("./lib/geos/cache");
var request = require("./lib/request");
var log = require("./lib/log");

var geos = [
    require("./lib/geos/url"),
    cache,
    require("./lib/geos/x5"),
    require("./lib/geos/weixin"),
    require("./lib/geos/qqbrowser"),
    require("./lib/geos/mobileqq"),
    require("./lib/geos/app"),
    require("./lib/geos/meituanapp"),
    require("./lib/geos/html")
];
var isSpider = function () {
    return !!navigator.userAgent.match(/spider/i);
};

//成功和失败的回掉队列
var sucCallbackQueue = [],
    errorCallBackQueue = [];

var isLocating = false; //是否正在定位

function execute(queue, args) {
    for (var i = 0, l = queue.length; i < l; i++) {
        queue.shift().apply(this, args || []);
    }
}

var urlDebug = ~location.href.indexOf("debug:whereami");

module.exports = function (onSuc, onFail) {

    /**
     * 过滤掉爬虫，直接onFail
     * */

    if (isSpider()) {
        onFail();
        return;
    }

    /**
     * 回调统统丢到队列里面,防止调用多次,触发多次调用底层接口
     * */

    onSuc && sucCallbackQueue.push(onSuc);
    onFail && errorCallBackQueue.push(onFail);



    if (isLocating) {
        return;
    }

    isLocating = true;
    var isTimeout = false;
    var timer;
    var timeout = config.get("timeout");
    var disables = config.get("disables");
    var startTime = +new Date();
    var geoMethodType;
    var debug = urlDebug || config.get("debug");

    var getPositionSuccess = function (position) {
        clearTimeout(timer);
        isLocating = false;

        if (position && position.lat && position.lng) {
            log(startTime, geoMethodType, true);
            //先设置cache , 即使是在主动超时的场景下
            cache.set(position);
        }

        if (isTimeout) {
            return;
        }

        if (!position || !position.lat || !position.lng || position.lat == "0" || position.lng == "0") {
            return getPositionError();
        }
        if (debug) {
            alert(JSON.stringify(position));
        }

        var cityType = config.get('cityType') || 'dianping';

        var needCity = config.get('city') 
            && position
            && (!position.city || position.city.cityType !== cityType)

        if (needCity) {
            //调用接口获取City信息
            var useMeituan;
            if (cityType) {
                if (cityType === 'meituan') {
                    useMeituan = true
                }else if (cityType === 'dianping') {
                    useMeituan = false
                }
            }else{
                if (~location.href.indexOf('.meituan.com') || ~location.href.indexOf('.meituan.net')) {
                    useMeituan = true
                }else{
                    useMeituan = false
                }
            }

            if (useMeituan) {
                var url
                if (location.protocol === 'https:') {
                    url = 'https://apimobile.meituan.com/group/v1/city/latlng/'
                }else {
                    url = 'http://api.mobile.meituan.com/group/v1/city/latlng/'
                }
                request({
                    url: url+ position.lat+","+position.lng,
                    data: {
                        tag: 0
                    },
                    onSuc: function(res) {
                        if (res && res.data) {
                            var data = res.data;
                            var city = {
                                cityType: 'meituan',
                                cityid: data.id,
                                cityname: data.city
                            };
                            position.city = city;   

                            cache.set({city: city});                     
                        }
                        execute(sucCallbackQueue,[
                            position
                        ]);
                    }
                })
            }else{
                request({
                    url: "//m.dianping.com/getlocalcityid",
                    data: {
                        lat: position.lat,
                        lng: position.lng
                    },
                    onSuc: function (res) {
                        if (res.code == 200 && res.message) {
                            position.city = res.message;
                            var city = position.city;
                            city.cityType = 'dianping';

                            cache.set({city: city});
                        }
                        execute(sucCallbackQueue, [
                            position
                        ]);
                    }
                });                
            }

        } else {
            execute(sucCallbackQueue, [
                position
            ]);
        }


    };
    var getPositionError = function () {
        clearTimeout(timer);
        isLocating = false;
        log(startTime, geoMethodType, false);
        log.logError(geoMethodType, JSON.stringify(Array.prototype.slice.call(arguments, 0)));
        if (isTimeout) {
            return;
        }
        execute(errorCallBackQueue);
//        if (e && e.code) {
//            switch (e.code) {
//                case 1:
//                    //用户拒绝
//                    break;
//                case 2:
//                case 3:
//                    //定位失败
//                    break;
//            }
//        }

    };

    if (timeout) {
        timer = setTimeout(function () {
            //超时
            isTimeout = true;
            isLocating = false;
            execute(errorCallBackQueue);
        }, timeout);
    }

    //依次call各个定位
    var current = -1;
    (function next() {
        current++;
        if (geos[current]) {
            geoMethodType = geos[current].type;

            if (disables && ~disables.indexOf(geoMethodType)) {
                next();
            } else {
                if (debug) {
                    alert("start geos:" + geoMethodType);
                }
                geos[current](function (res) {
                    res.type = geoMethodType;
                    if (!res.geoType) {
                        res.geoType = 'wgs84';
                    }
                    getPositionSuccess(res);
                }, getPositionError, next);
            }
        } else {
            //一个都没成功
            getPositionError({
                message: "no geo support"
            });
        }
    })();

};

module.exports.config = config.config;

module.exports.init = function () {
    config.config({
        wxAutoConfig: true
    });
    module.exports(function (res) {
        console.log(res);
    }, function () {
        console.log("fail")
    })
};
